<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <!--TODO：Druid 数据源会导致卡死-->
    <import resource="classpath:mybatis-yoong_rehearsal.xml"/>
    <import resource="classpath:mybatis-wong_user.xml"/>
    <import resource="classpath:activemq.xml"/>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <bean class="com.yunyi.web.interceptor.FirstInterceptor"></bean>
        <mvc:interceptor>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <mvc:mapping path="/category/add.do"/>
            <mvc:exclude-mapping path="/category/add.do"/>
            <bean class="com.yunyi.web.interceptor.SecondInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views
        directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="postProcessor" class="com.yunyi.web.postprocessor.RootContainerBeanPostProcessor"/>

</beans> 