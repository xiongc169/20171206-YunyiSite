<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yunyisite.dao.NoticeMapper">

	<resultMap id="BaseResultMap" type="org.yunyisite.domain.Notice">
		<id column="Id" jdbcType="CHAR" property="id" />
		<result column="Title" jdbcType="NVARCHAR" property="title" />
		<result column="Type" jdbcType="NVARCHAR" property="type" />
		<result column="IsPublic" jdbcType="BIT" property="ispublic" />
		<result column="AttachId" jdbcType="CHAR" property="attachid" />
		<result column="Creator" jdbcType="NVARCHAR" property="creator" />
		<result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="Status" jdbcType="BIT" property="status" />
		<result column="Publishor" jdbcType="NVARCHAR" property="publishor" />
		<result column="PublishTime" jdbcType="TIMESTAMP" property="publishtime" />
		<result column="IsTop" jdbcType="BIT" property="istop" />
		<result column="IsEmailNotify" jdbcType="BIT" property="isemailnotify" />
		<result column="Definition1" jdbcType="NVARCHAR" property="definition1" />
		<result column="Definition2" jdbcType="NVARCHAR" property="definition2" />
		<result column="IsDelete" jdbcType="BIT" property="isdelete" />
		<result column="EmailNotifyStatus" jdbcType="BIT" property="emailnotifystatus" />
	</resultMap>

	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="org.yunyisite.domain.NoticeWithBLOBs">
		<result column="Content" jdbcType="LONGVARCHAR" property="content" />
		<result column="Receiver" jdbcType="LONGVARCHAR" property="receiver" />
		<result column="CopyTo" jdbcType="LONGVARCHAR" property="copyto" />
		<result column="SecretTo" jdbcType="LONGVARCHAR" property="secretto" />
		<result column="NotifyMessage" jdbcType="LONGVARCHAR" property="notifymessage" />
	</resultMap>

	<resultMap extends="ResultMapWithBLOBs" id="ExtendResultMap"
		type="org.yunyisite.dto.NoticeDTO">
		<collection property="bizSystemList" column="id"
			select="org.yunyisite.dao.ReNoticeBusinesssystemMapper.selectByNoticeId"></collection>
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Base_Column_List">
		Id, Title, Type, IsPublic, AttachId, Creator, CreateTime,
		Status,
		Publishor, PublishTime,
		IsTop, IsEmailNotify, Definition1,
		Definition2, IsDelete, EmailNotifyStatus
	</sql>

	<sql id="Blob_Column_List">
		Content, Receiver, CopyTo, SecretTo, NotifyMessage
	</sql>

	<select id="selectByExampleWithBLOBs" parameterType="org.yunyisite.domain.NoticeExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from Notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectByExample" parameterType="org.yunyisite.domain.NoticeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from Notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from Notice
		where Id = #{id,jdbcType=CHAR}
	</select>

	<!-- 公告查询(联查关联的业务系统) -->
	<select id="selectExtendByPrimaryKey" parameterType="java.lang.String"
		resultMap="ExtendResultMap">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from Notice
		where Id = #{id,jdbcType=CHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from Notice
		where Id = #{id,jdbcType=CHAR}
	</delete>

	<delete id="deleteByExample" parameterType="org.yunyisite.domain.NoticeExample">
		delete from Notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<insert id="insert" parameterType="org.yunyisite.domain.NoticeWithBLOBs">
		insert into Notice (Id, Title,
		Type,
		IsPublic, AttachId, Creator,
		CreateTime, Status, Publishor,
		PublishTime, IsTop, IsEmailNotify,
		Definition1, Definition2, IsDelete,
		EmailNotifyStatus, Content, Receiver,
		CopyTo, SecretTo, NotifyMessage
		)
		values (#{id,jdbcType=CHAR}, #{title,jdbcType=NVARCHAR},
		#{type,jdbcType=NVARCHAR},
		#{ispublic,jdbcType=BIT},
		#{attachid,jdbcType=CHAR}, #{creator,jdbcType=NVARCHAR},
		#{createtime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT},
		#{publishor,jdbcType=NVARCHAR},
		#{publishtime,jdbcType=TIMESTAMP},
		#{istop,jdbcType=BIT}, #{isemailnotify,jdbcType=BIT},
		#{definition1,jdbcType=NVARCHAR}, #{definition2,jdbcType=NVARCHAR},
		#{isdelete,jdbcType=BIT},
		#{emailnotifystatus,jdbcType=BIT},
		#{content,jdbcType=LONGVARCHAR}, #{receiver,jdbcType=LONGVARCHAR},
		#{copyto,jdbcType=LONGVARCHAR}, #{secretto,jdbcType=LONGVARCHAR},
		#{notifymessage,jdbcType=LONGVARCHAR}
		)
	</insert>

	<insert id="insertSelective" parameterType="org.yunyisite.domain.NoticeWithBLOBs">
		insert into Notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="title != null">
				Title,
			</if>
			<if test="type != null">
				Type,
			</if>
			<if test="ispublic != null">
				IsPublic,
			</if>
			<if test="attachid != null">
				AttachId,
			</if>
			<if test="creator != null">
				Creator,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="publishor != null">
				Publishor,
			</if>
			<if test="publishtime != null">
				PublishTime,
			</if>
			<if test="istop != null">
				IsTop,
			</if>
			<if test="isemailnotify != null">
				IsEmailNotify,
			</if>
			<if test="definition1 != null">
				Definition1,
			</if>
			<if test="definition2 != null">
				Definition2,
			</if>
			<if test="isdelete != null">
				IsDelete,
			</if>
			<if test="emailnotifystatus != null">
				EmailNotifyStatus,
			</if>
			<if test="content != null">
				Content,
			</if>
			<if test="receiver != null">
				Receiver,
			</if>
			<if test="copyto != null">
				CopyTo,
			</if>
			<if test="secretto != null">
				SecretTo,
			</if>
			<if test="notifymessage != null">
				NotifyMessage,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=NVARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=NVARCHAR},
			</if>
			<if test="ispublic != null">
				#{ispublic,jdbcType=BIT},
			</if>
			<if test="attachid != null">
				#{attachid,jdbcType=CHAR},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=NVARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIT},
			</if>
			<if test="publishor != null">
				#{publishor,jdbcType=NVARCHAR},
			</if>
			<if test="publishtime != null">
				#{publishtime,jdbcType=TIMESTAMP},
			</if>
			<if test="istop != null">
				#{istop,jdbcType=BIT},
			</if>
			<if test="isemailnotify != null">
				#{isemailnotify,jdbcType=BIT},
			</if>
			<if test="definition1 != null">
				#{definition1,jdbcType=NVARCHAR},
			</if>
			<if test="definition2 != null">
				#{definition2,jdbcType=NVARCHAR},
			</if>
			<if test="isdelete != null">
				#{isdelete,jdbcType=BIT},
			</if>
			<if test="emailnotifystatus != null">
				#{emailnotifystatus,jdbcType=BIT},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="receiver != null">
				#{receiver,jdbcType=LONGVARCHAR},
			</if>
			<if test="copyto != null">
				#{copyto,jdbcType=LONGVARCHAR},
			</if>
			<if test="secretto != null">
				#{secretto,jdbcType=LONGVARCHAR},
			</if>
			<if test="notifymessage != null">
				#{notifymessage,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>

	<select id="countByExample" parameterType="org.yunyisite.domain.NoticeExample"
		resultType="java.lang.Integer">
		select count(*) from Notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<update id="updateByExampleSelective" parameterType="map">
		update Notice
		<set>
			<if test="record.id != null">
				Id = #{record.id,jdbcType=CHAR},
			</if>
			<if test="record.title != null">
				Title = #{record.title,jdbcType=NVARCHAR},
			</if>
			<if test="record.type != null">
				Type = #{record.type,jdbcType=NVARCHAR},
			</if>
			<if test="record.ispublic != null">
				IsPublic = #{record.ispublic,jdbcType=BIT},
			</if>
			<if test="record.attachid != null">
				AttachId = #{record.attachid,jdbcType=CHAR},
			</if>
			<if test="record.creator != null">
				Creator = #{record.creator,jdbcType=NVARCHAR},
			</if>
			<if test="record.createtime != null">
				CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				Status = #{record.status,jdbcType=BIT},
			</if>
			<if test="record.publishor != null">
				Publishor = #{record.publishor,jdbcType=NVARCHAR},
			</if>
			<if test="record.publishtime != null">
				PublishTime = #{record.publishtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.istop != null">
				IsTop = #{record.istop,jdbcType=BIT},
			</if>
			<if test="record.isemailnotify != null">
				IsEmailNotify = #{record.isemailnotify,jdbcType=BIT},
			</if>
			<if test="record.definition1 != null">
				Definition1 = #{record.definition1,jdbcType=NVARCHAR},
			</if>
			<if test="record.definition2 != null">
				Definition2 = #{record.definition2,jdbcType=NVARCHAR},
			</if>
			<if test="record.isdelete != null">
				IsDelete = #{record.isdelete,jdbcType=BIT},
			</if>
			<if test="record.emailnotifystatus != null">
				EmailNotifyStatus =
				#{record.emailnotifystatus,jdbcType=BIT},
			</if>
			<if test="record.content != null">
				Content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.receiver != null">
				Receiver = #{record.receiver,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.copyto != null">
				CopyTo = #{record.copyto,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.secretto != null">
				SecretTo = #{record.secretto,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.notifymessage != null">
				NotifyMessage =
				#{record.notifymessage,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByExampleWithBLOBs" parameterType="map">
		update Notice
		set Id = #{record.id,jdbcType=CHAR},
		Title =
		#{record.title,jdbcType=NVARCHAR},
		Type =
		#{record.type,jdbcType=NVARCHAR},
		IsPublic =
		#{record.ispublic,jdbcType=BIT},
		AttachId =
		#{record.attachid,jdbcType=CHAR},
		Creator =
		#{record.creator,jdbcType=NVARCHAR},
		CreateTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		Status =
		#{record.status,jdbcType=BIT},
		Publishor =
		#{record.publishor,jdbcType=NVARCHAR},
		PublishTime =
		#{record.publishtime,jdbcType=TIMESTAMP},
		IsTop =
		#{record.istop,jdbcType=BIT},
		IsEmailNotify =
		#{record.isemailnotify,jdbcType=BIT},
		Definition1 =
		#{record.definition1,jdbcType=NVARCHAR},
		Definition2 =
		#{record.definition2,jdbcType=NVARCHAR},
		IsDelete =
		#{record.isdelete,jdbcType=BIT},
		EmailNotifyStatus =
		#{record.emailnotifystatus,jdbcType=BIT},
		Content =
		#{record.content,jdbcType=LONGVARCHAR},
		Receiver =
		#{record.receiver,jdbcType=LONGVARCHAR},
		CopyTo =
		#{record.copyto,jdbcType=LONGVARCHAR},
		SecretTo =
		#{record.secretto,jdbcType=LONGVARCHAR},
		NotifyMessage =
		#{record.notifymessage,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByExample" parameterType="map">
		update Notice
		set Id = #{record.id,jdbcType=CHAR},
		Title =
		#{record.title,jdbcType=NVARCHAR},
		Type =
		#{record.type,jdbcType=NVARCHAR},
		IsPublic =
		#{record.ispublic,jdbcType=BIT},
		AttachId =
		#{record.attachid,jdbcType=CHAR},
		Creator =
		#{record.creator,jdbcType=NVARCHAR},
		CreateTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		Status =
		#{record.status,jdbcType=BIT},
		Publishor =
		#{record.publishor,jdbcType=NVARCHAR},
		PublishTime =
		#{record.publishtime,jdbcType=TIMESTAMP},
		IsTop =
		#{record.istop,jdbcType=BIT},
		IsEmailNotify =
		#{record.isemailnotify,jdbcType=BIT},
		Definition1 =
		#{record.definition1,jdbcType=NVARCHAR},
		Definition2 =
		#{record.definition2,jdbcType=NVARCHAR},
		IsDelete =
		#{record.isdelete,jdbcType=BIT},
		EmailNotifyStatus =
		#{record.emailnotifystatus,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="org.yunyisite.domain.NoticeWithBLOBs">
		update Notice
		<set>
			<if test="title != null">
				Title = #{title,jdbcType=NVARCHAR},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=NVARCHAR},
			</if>
			<if test="ispublic != null">
				IsPublic = #{ispublic,jdbcType=BIT},
			</if>
			<if test="attachid != null">
				AttachId = #{attachid,jdbcType=CHAR},
			</if>
			<if test="creator != null">
				Creator = #{creator,jdbcType=NVARCHAR},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=BIT},
			</if>
			<if test="publishor != null">
				Publishor = #{publishor,jdbcType=NVARCHAR},
			</if>
			<if test="publishtime != null">
				PublishTime = #{publishtime,jdbcType=TIMESTAMP},
			</if>
			<if test="istop != null">
				IsTop = #{istop,jdbcType=BIT},
			</if>
			<if test="isemailnotify != null">
				IsEmailNotify = #{isemailnotify,jdbcType=BIT},
			</if>
			<if test="definition1 != null">
				Definition1 = #{definition1,jdbcType=NVARCHAR},
			</if>
			<if test="definition2 != null">
				Definition2 = #{definition2,jdbcType=NVARCHAR},
			</if>
			<if test="isdelete != null">
				IsDelete = #{isdelete,jdbcType=BIT},
			</if>
			<if test="emailnotifystatus != null">
				EmailNotifyStatus = #{emailnotifystatus,jdbcType=BIT},
			</if>
			<if test="content != null">
				Content = #{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="receiver != null">
				Receiver = #{receiver,jdbcType=LONGVARCHAR},
			</if>
			<if test="copyto != null">
				CopyTo = #{copyto,jdbcType=LONGVARCHAR},
			</if>
			<if test="secretto != null">
				SecretTo = #{secretto,jdbcType=LONGVARCHAR},
			</if>
			<if test="notifymessage != null">
				NotifyMessage = #{notifymessage,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=CHAR}
	</update>

	<update id="updateByPrimaryKeyWithBLOBs" parameterType="org.yunyisite.domain.NoticeWithBLOBs">
		update
		Notice
		set Title = #{title,jdbcType=NVARCHAR},
		Type =
		#{type,jdbcType=NVARCHAR},
		IsPublic = #{ispublic,jdbcType=BIT},
		AttachId = #{attachid,jdbcType=CHAR},
		Creator =
		#{creator,jdbcType=NVARCHAR},
		CreateTime =
		#{createtime,jdbcType=TIMESTAMP},
		Status = #{status,jdbcType=BIT},
		Publishor = #{publishor,jdbcType=NVARCHAR},
		PublishTime =
		#{publishtime,jdbcType=TIMESTAMP},
		IsTop = #{istop,jdbcType=BIT},
		IsEmailNotify = #{isemailnotify,jdbcType=BIT},
		Definition1 =
		#{definition1,jdbcType=NVARCHAR},
		Definition2 =
		#{definition2,jdbcType=NVARCHAR},
		IsDelete = #{isdelete,jdbcType=BIT},
		EmailNotifyStatus = #{emailnotifystatus,jdbcType=BIT},
		Content =
		#{content,jdbcType=LONGVARCHAR},
		Receiver =
		#{receiver,jdbcType=LONGVARCHAR},
		CopyTo =
		#{copyto,jdbcType=LONGVARCHAR},
		SecretTo =
		#{secretto,jdbcType=LONGVARCHAR},
		NotifyMessage =
		#{notifymessage,jdbcType=LONGVARCHAR}
		where Id = #{id,jdbcType=CHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="org.yunyisite.domain.Notice">
		update Notice
		set
		Title = #{title,jdbcType=NVARCHAR},
		Type = #{type,jdbcType=NVARCHAR},
		IsPublic = #{ispublic,jdbcType=BIT},
		AttachId =
		#{attachid,jdbcType=CHAR},
		Creator = #{creator,jdbcType=NVARCHAR},
		CreateTime = #{createtime,jdbcType=TIMESTAMP},
		Status =
		#{status,jdbcType=BIT},
		Publishor = #{publishor,jdbcType=NVARCHAR},
		PublishTime = #{publishtime,jdbcType=TIMESTAMP},
		IsTop =
		#{istop,jdbcType=BIT},
		IsEmailNotify = #{isemailnotify,jdbcType=BIT},
		Definition1 = #{definition1,jdbcType=NVARCHAR},
		Definition2 =
		#{definition2,jdbcType=NVARCHAR},
		IsDelete = #{isdelete,jdbcType=BIT},
		EmailNotifyStatus = #{emailnotifystatus,jdbcType=BIT}
		where Id =
		#{id,jdbcType=CHAR}
	</update>

	<update id="updateById" parameterType="map">
		update Notice
		set
		Title =
		#{arg1},
		Content =#{arg2}
		where Id=#{arg0}
	</update>
</mapper>